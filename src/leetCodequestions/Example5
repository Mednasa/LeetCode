You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.

Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.



Example 1:

Input: nums = [1,2,3,1]
Output: 4
Explanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).
Total amount you can rob = 1 + 3 = 4.
Example 2:

Input: nums = [2,7,9,3,1]
Output: 12
Explanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).
Total amount you can rob = 2 + 9 + 1 = 12.


Constraints:

1 <= nums.length <= 100
0 <= nums[i] <= 400


Bir sokak boyunca evleri soymayı planlayan profesyonel bir soyguncusunuz. Her evde belirli bir miktar para saklı, her birini soymanızı engelleyen tek kısıtlama, bitişik evlerin güvenlik sistemlerinin bağlı olması ve aynı gece iki bitişik eve girilirse otomatik olarak polisle iletişime geçecek olmasıdır.

Her evin para miktarını temsil eden bir tamsayı dizisi nums verildiğinde, polisi uyarmadan bu gece soyabileceğiniz maksimum para miktarını döndürün.



Örnek 1:

Girdi: nums = [1,2,3,1]
Çıktı: 4
Açıklama: 1 numaralı evi soyun (para = 1) ve sonra 3 numaralı evi soyun (para = 3).
Soyabileceğiniz toplam miktar = 1 + 3 = 4.
Örnek 2:

Girdi: nums = [2,7,9,3,1]
Çıktı: 12
Açıklama: Ev 1'i soyun (para = 2), ev 3'ü soyun (para = 9) ve ev 5'i soyun (para = 1).
Soyabileceğiniz toplam miktar = 2 + 9 + 1 = 12.


Kısıtlamalar:

1 <= nums.length <= 100
0 <= nums[i] <= 400

